// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/rramesh/eatables/sdk/models"
)

// ListItemBySKUReader is a Reader for the ListItemBySKU structure.
type ListItemBySKUReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListItemBySKUReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListItemBySKUOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewListItemBySKUNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListItemBySKUOK creates a ListItemBySKUOK with default headers values
func NewListItemBySKUOK() *ListItemBySKUOK {
	return &ListItemBySKUOK{}
}

/*ListItemBySKUOK handles this case with default header values.

A list of eatable items returned in the response
*/
type ListItemBySKUOK struct {
	Payload []*models.Item
}

func (o *ListItemBySKUOK) Error() string {
	return fmt.Sprintf("[GET /items/sku/{uuid}][%d] listItemBySKUOK  %+v", 200, o.Payload)
}

func (o *ListItemBySKUOK) GetPayload() []*models.Item {
	return o.Payload
}

func (o *ListItemBySKUOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListItemBySKUNotFound creates a ListItemBySKUNotFound with default headers values
func NewListItemBySKUNotFound() *ListItemBySKUNotFound {
	return &ListItemBySKUNotFound{}
}

/*ListItemBySKUNotFound handles this case with default header values.

Generic error message returned as a string
*/
type ListItemBySKUNotFound struct {
	Payload *models.GenericError
}

func (o *ListItemBySKUNotFound) Error() string {
	return fmt.Sprintf("[GET /items/sku/{uuid}][%d] listItemBySKUNotFound  %+v", 404, o.Payload)
}

func (o *ListItemBySKUNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ListItemBySKUNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
