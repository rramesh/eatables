// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/rramesh/eatables/sdk/models"
)

// ListItemsByVendorReader is a Reader for the ListItemsByVendor structure.
type ListItemsByVendorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListItemsByVendorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListItemsByVendorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewListItemsByVendorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListItemsByVendorOK creates a ListItemsByVendorOK with default headers values
func NewListItemsByVendorOK() *ListItemsByVendorOK {
	return &ListItemsByVendorOK{}
}

/*ListItemsByVendorOK handles this case with default header values.

A list of eatable items returned in the response
*/
type ListItemsByVendorOK struct {
	Payload []*models.Item
}

func (o *ListItemsByVendorOK) Error() string {
	return fmt.Sprintf("[GET /items/vendor/{uuid}][%d] listItemsByVendorOK  %+v", 200, o.Payload)
}

func (o *ListItemsByVendorOK) GetPayload() []*models.Item {
	return o.Payload
}

func (o *ListItemsByVendorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListItemsByVendorNotFound creates a ListItemsByVendorNotFound with default headers values
func NewListItemsByVendorNotFound() *ListItemsByVendorNotFound {
	return &ListItemsByVendorNotFound{}
}

/*ListItemsByVendorNotFound handles this case with default header values.

Generic error message returned as a string
*/
type ListItemsByVendorNotFound struct {
	Payload *models.GenericError
}

func (o *ListItemsByVendorNotFound) Error() string {
	return fmt.Sprintf("[GET /items/vendor/{uuid}][%d] listItemsByVendorNotFound  %+v", 404, o.Payload)
}

func (o *ListItemsByVendorNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ListItemsByVendorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
