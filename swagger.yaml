basePath: /
consumes:
- application/json
definitions:
  CreateUpdateMessage:
    description: CreateUpdateMessage holds message response and data to be sent as JSON
    properties:
      message:
        description: Status Message
        example: Item Added/Updated Successfully
        type: string
        x-go-name: Message
      sku:
        description: SKU UUID of item added/updated
        example: dca98ae0-2b9f-441c-9007-ef824f1581fd
        type: string
        x-go-name: SKU
    type: object
    x-go-package: github.com/rramesh/eatables/handlers/rest
  GenericError:
    description: GenericError GenericError GenericError GenericError holds a message string to be sent as JSON
    properties:
      Message:
        description: message
        type: string
    type: object
    x-go-package: github.com/rramesh/eatables/sdk/models
  GenericMessage:
    description: GenericMessage holds a message string to be sent as JSON
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/rramesh/eatables/handlers/rest
  Item:
    description: Item Item defines the structure for an API Food Item
    properties:
      availableTimes:
        description: |-
          What times this item is available.
          Range provided as Array of Array of two strings
        example: '[{From: 360, To: 660}, {From: 1020, To: 1350}]'
        items:
          $ref: '#/definitions/TimeRange'
          items:
            type: string
          type: array
        type: array
        x-go-name: AvailableTimes
      category:
        description: Category this Item belongs to, array of Strings. Used for grouping Items under menu
        example:
        - Breakfast
        - Dinner
        items:
          type: string
        type: array
        x-go-name: Category
      cuisine:
        description: Cuisine this Item belongs to
        example: South Indian
        type: string
        x-go-name: Cuisine
      customizable:
        description: Is the Item Customizable. Defaults to False
        example: false
        type: boolean
        x-go-name: Customizable
      description:
        description: Description of this Item
        example: Made from rice, lentils, potato, fenugreek, and curry leaves, and served with chutneys and sambar.
        type: string
        x-go-name: Description
      dontMakeItAnymore:
        description: |-
          Is the Item still made? Active?
          Defaults to False, meaning Item is still being made and active
        example: false
        type: boolean
        x-go-name: DontMakeItAnymore
      id:
        description: The ID of this Item
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      name:
        description: Name of this Item
        example: Masala Dosa
        type: string
        x-go-name: Name
      nonVegetarian:
        description: |-
          Whether this Item is Non-vegetarian
          Defaults to False if not provided - Item is Vegetarian by default
        example: false
        type: boolean
        x-go-name: NonVegetarian
      price:
        description: Price of this Item
        example: 75
        format: float
        minimum: 0.01
        type: number
        x-go-name: Price
      sku:
        description: The SKU of this Item. UUID format
        example: b5113148-d1fc-4c17-8177-519120495b4c
        pattern: '[a-zA-Z0-9]{12}'
        type: string
        x-go-name: SKU
      tags:
        description: |-
          Tags to be associated with this Item.
          Helpful as search keywords
        example:
        - Yummy
        - South Indian
        - Dosa
        - Special Dosa
        items:
          type: string
        type: array
        x-go-name: Tags
      vendorCode:
        description: The Vendor Code of this Item. UUID format
        example: ee846edd-b2ee-4ab2-bd97-2c4246c56cf5
        pattern: '[a-zA-Z0-9]{12}'
        type: string
        x-go-name: VendorCode
    required:
    - sku
    - vendorCode
    - name
    - description
    - price
    type: object
    x-go-package: github.com/rramesh/eatables/sdk/models
  TimeRange:
    description: TimeRange holds a starting and ending time
    properties:
      from:
        format: uint32
        type: integer
        x-go-name: From
      to:
        format: uint32
        type: integer
        x-go-name: To
    type: object
    x-go-package: github.com/rramesh/eatables/data
  ValidationError:
    description: ValidationError ValidationError ValidationError ValidationError holds a slice of error messages to be sent as JSON
    properties:
      Message:
        description: message
        items:
          type: string
        type: array
    type: object
    x-go-package: github.com/rramesh/eatables/sdk/models
info:
  description: Documentation for Eatables API
  title: '- classification of eatables API'
  version: 1.0.0
paths:
  /items:
    get:
      description: Returns a list of Eatable Items
      operationId: listItems
      responses:
        "200":
          $ref: '#/responses/itemResponse'
      tags:
      - items
    post:
      description: Create a new Eatable item
      operationId: createItem
      parameters:
      - description: |-
          Item data structure to Update or Create.
          Note: the id field is ignored by update and create operations
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Item'
      responses:
        "200":
          $ref: '#/responses/createUpdateResponse'
        "422":
          $ref: '#/responses/errorValidation'
        "501":
          $ref: '#/responses/errorResponse'
      tags:
      - items
    put:
      description: Update an eatable item's details
      operationId: updateItem
      parameters:
      - description: |-
          Item data structure to Update or Create.
          Note: the id field is ignored by update and create operations
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Item'
      responses:
        "200":
          $ref: '#/responses/createUpdateResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorValidation'
      tags:
      - items
  /items/{id}:
    get:
      description: Return a specific Eatable item from the database
      operationId: listSingleItem
      parameters:
      - description: The id of the item for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          $ref: '#/responses/itemResponse'
        "404":
          $ref: '#/responses/errorResponse'
      tags:
      - items
  /items/{sku}:
    delete:
      description: Deleta an eatable Item
      operationId: deleteItem
      parameters:
      - description: The UUID of the item for which the operation relates
        in: path
        name: sku
        required: true
        type: string
        x-go-name: SKU
      responses:
        "200":
          $ref: '#/responses/messageResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "501":
          $ref: '#/responses/errorResponse'
      tags:
      - items
  /items/sku/{sku}:
    get:
      description: Returns an item by SKU (UUID)
      operationId: listItemBySKU
      parameters:
      - description: The UUID of the item for which the operation relates
        in: path
        name: sku
        required: true
        type: string
        x-go-name: SKU
      responses:
        "200":
          $ref: '#/responses/itemResponse'
        "404":
          $ref: '#/responses/errorResponse'
      tags:
      - items
  /items/vendor/{vendorCode}:
    get:
      description: Returns a list of items by Vendor Code (UUID)
      operationId: listItemsByVendor
      parameters:
      - description: The UUID of the item for which the operation relates
        in: path
        name: vendorCode
        required: true
        type: string
        x-go-name: VendorCode
      responses:
        "200":
          $ref: '#/responses/itemResponse'
        "404":
          $ref: '#/responses/errorResponse'
      tags:
      - items
produces:
- application/json
responses:
  createUpdateResponse:
    description: Successfull Create or Update response
    schema:
      $ref: '#/definitions/CreateUpdateMessage'
  errorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericMessage'
  errorValidation:
    description: Validation errors defined as an array of strings
    schema:
      $ref: '#/definitions/ValidationError'
  itemResponse:
    description: A list of eatable items returned in the response
    schema:
      properties:
        items:
          items:
            $ref: '#/definitions/Item'
          type: array
          x-go-name: Items
      type: object
  messageResponse:
    description: Generic message returned as a string
    schema:
      $ref: '#/definitions/GenericMessage'
  noContentResponse:
    description: No content is returned by this API endpoint
schemes:
- http
swagger: "2.0"
